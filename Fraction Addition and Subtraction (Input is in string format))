class Solution {
public:
    string fractionAddition(string expression) {
       int prev_numer=0,prev_denom=1;
       int curr_numer=0,curr_denom=0;
       char curr_sym='+';
       int i=0;
       while(i<expression.size()){

           if(expression[i]=='-' || expression[i]=='+'){
               curr_sym=expression[i];
               i++;
           }


            curr_numer=0;
             while(i<expression.size() && expression[i]>='0' && expression[i]<='9'){
                  curr_numer=curr_numer*10+(expression[i]-'0');
                  i++;
             }

             if(i<expression.size() && expression[i]=='/'){
                i++;
             }
             
             curr_denom=0;
             while(i<expression.size() && expression[i]>='0' && expression[i]<='9'){

                curr_denom=curr_denom*10+(expression[i]-'0');
                i++;
             }


                int gcd=__gcd(prev_denom,curr_denom);
                int lcm=(prev_denom*curr_denom)/gcd;
                int prev_ans=(lcm/prev_denom)*prev_numer;
                int curr_ans=(lcm/curr_denom)*curr_numer;
                
                if(curr_sym=='-'){
                    prev_numer=prev_ans-curr_ans;
                    
                }
                else if(curr_sym=='+'){
                    prev_numer=prev_ans+curr_ans;
                   
                }
                prev_denom=lcm;

                gcd=__gcd(abs(prev_numer),prev_denom);
                prev_numer/=gcd;
                prev_denom/=gcd;
        }  

       return to_string(prev_numer)+'/'+to_string(prev_denom);
    }
};
